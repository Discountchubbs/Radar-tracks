#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6095997321851776631) {
   out_6095997321851776631[0] = 0;
   out_6095997321851776631[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6095997321851776631[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6095997321851776631[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6095997321851776631[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6095997321851776631[5] = -sin(in_vec[1]);
   out_6095997321851776631[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6095997321851776631[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6095997321851776631[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6095997321851776631[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6095997321851776631[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6095997321851776631[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6095997321851776631[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6095997321851776631[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6095997321851776631[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6095997321851776631[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6095997321851776631[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6095997321851776631[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1020174459653040964) {
   out_1020174459653040964[0] = delta_x[0] + nom_x[0];
   out_1020174459653040964[1] = delta_x[1] + nom_x[1];
   out_1020174459653040964[2] = delta_x[2] + nom_x[2];
   out_1020174459653040964[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1020174459653040964[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1020174459653040964[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1020174459653040964[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1020174459653040964[7] = delta_x[6] + nom_x[7];
   out_1020174459653040964[8] = delta_x[7] + nom_x[8];
   out_1020174459653040964[9] = delta_x[8] + nom_x[9];
   out_1020174459653040964[10] = delta_x[9] + nom_x[10];
   out_1020174459653040964[11] = delta_x[10] + nom_x[11];
   out_1020174459653040964[12] = delta_x[11] + nom_x[12];
   out_1020174459653040964[13] = delta_x[12] + nom_x[13];
   out_1020174459653040964[14] = delta_x[13] + nom_x[14];
   out_1020174459653040964[15] = delta_x[14] + nom_x[15];
   out_1020174459653040964[16] = delta_x[15] + nom_x[16];
   out_1020174459653040964[17] = delta_x[16] + nom_x[17];
   out_1020174459653040964[18] = delta_x[17] + nom_x[18];
   out_1020174459653040964[19] = delta_x[18] + nom_x[19];
   out_1020174459653040964[20] = delta_x[19] + nom_x[20];
   out_1020174459653040964[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_170284851571879567) {
   out_170284851571879567[0] = -nom_x[0] + true_x[0];
   out_170284851571879567[1] = -nom_x[1] + true_x[1];
   out_170284851571879567[2] = -nom_x[2] + true_x[2];
   out_170284851571879567[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_170284851571879567[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_170284851571879567[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_170284851571879567[6] = -nom_x[7] + true_x[7];
   out_170284851571879567[7] = -nom_x[8] + true_x[8];
   out_170284851571879567[8] = -nom_x[9] + true_x[9];
   out_170284851571879567[9] = -nom_x[10] + true_x[10];
   out_170284851571879567[10] = -nom_x[11] + true_x[11];
   out_170284851571879567[11] = -nom_x[12] + true_x[12];
   out_170284851571879567[12] = -nom_x[13] + true_x[13];
   out_170284851571879567[13] = -nom_x[14] + true_x[14];
   out_170284851571879567[14] = -nom_x[15] + true_x[15];
   out_170284851571879567[15] = -nom_x[16] + true_x[16];
   out_170284851571879567[16] = -nom_x[17] + true_x[17];
   out_170284851571879567[17] = -nom_x[18] + true_x[18];
   out_170284851571879567[18] = -nom_x[19] + true_x[19];
   out_170284851571879567[19] = -nom_x[20] + true_x[20];
   out_170284851571879567[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_762102343625566160) {
   out_762102343625566160[0] = 1.0;
   out_762102343625566160[1] = 0;
   out_762102343625566160[2] = 0;
   out_762102343625566160[3] = 0;
   out_762102343625566160[4] = 0;
   out_762102343625566160[5] = 0;
   out_762102343625566160[6] = 0;
   out_762102343625566160[7] = 0;
   out_762102343625566160[8] = 0;
   out_762102343625566160[9] = 0;
   out_762102343625566160[10] = 0;
   out_762102343625566160[11] = 0;
   out_762102343625566160[12] = 0;
   out_762102343625566160[13] = 0;
   out_762102343625566160[14] = 0;
   out_762102343625566160[15] = 0;
   out_762102343625566160[16] = 0;
   out_762102343625566160[17] = 0;
   out_762102343625566160[18] = 0;
   out_762102343625566160[19] = 0;
   out_762102343625566160[20] = 0;
   out_762102343625566160[21] = 0;
   out_762102343625566160[22] = 1.0;
   out_762102343625566160[23] = 0;
   out_762102343625566160[24] = 0;
   out_762102343625566160[25] = 0;
   out_762102343625566160[26] = 0;
   out_762102343625566160[27] = 0;
   out_762102343625566160[28] = 0;
   out_762102343625566160[29] = 0;
   out_762102343625566160[30] = 0;
   out_762102343625566160[31] = 0;
   out_762102343625566160[32] = 0;
   out_762102343625566160[33] = 0;
   out_762102343625566160[34] = 0;
   out_762102343625566160[35] = 0;
   out_762102343625566160[36] = 0;
   out_762102343625566160[37] = 0;
   out_762102343625566160[38] = 0;
   out_762102343625566160[39] = 0;
   out_762102343625566160[40] = 0;
   out_762102343625566160[41] = 0;
   out_762102343625566160[42] = 0;
   out_762102343625566160[43] = 0;
   out_762102343625566160[44] = 1.0;
   out_762102343625566160[45] = 0;
   out_762102343625566160[46] = 0;
   out_762102343625566160[47] = 0;
   out_762102343625566160[48] = 0;
   out_762102343625566160[49] = 0;
   out_762102343625566160[50] = 0;
   out_762102343625566160[51] = 0;
   out_762102343625566160[52] = 0;
   out_762102343625566160[53] = 0;
   out_762102343625566160[54] = 0;
   out_762102343625566160[55] = 0;
   out_762102343625566160[56] = 0;
   out_762102343625566160[57] = 0;
   out_762102343625566160[58] = 0;
   out_762102343625566160[59] = 0;
   out_762102343625566160[60] = 0;
   out_762102343625566160[61] = 0;
   out_762102343625566160[62] = 0;
   out_762102343625566160[63] = 0;
   out_762102343625566160[64] = 0;
   out_762102343625566160[65] = 0;
   out_762102343625566160[66] = -0.5*state[4];
   out_762102343625566160[67] = -0.5*state[5];
   out_762102343625566160[68] = -0.5*state[6];
   out_762102343625566160[69] = 0;
   out_762102343625566160[70] = 0;
   out_762102343625566160[71] = 0;
   out_762102343625566160[72] = 0;
   out_762102343625566160[73] = 0;
   out_762102343625566160[74] = 0;
   out_762102343625566160[75] = 0;
   out_762102343625566160[76] = 0;
   out_762102343625566160[77] = 0;
   out_762102343625566160[78] = 0;
   out_762102343625566160[79] = 0;
   out_762102343625566160[80] = 0;
   out_762102343625566160[81] = 0;
   out_762102343625566160[82] = 0;
   out_762102343625566160[83] = 0;
   out_762102343625566160[84] = 0;
   out_762102343625566160[85] = 0;
   out_762102343625566160[86] = 0;
   out_762102343625566160[87] = 0.5*state[3];
   out_762102343625566160[88] = 0.5*state[6];
   out_762102343625566160[89] = -0.5*state[5];
   out_762102343625566160[90] = 0;
   out_762102343625566160[91] = 0;
   out_762102343625566160[92] = 0;
   out_762102343625566160[93] = 0;
   out_762102343625566160[94] = 0;
   out_762102343625566160[95] = 0;
   out_762102343625566160[96] = 0;
   out_762102343625566160[97] = 0;
   out_762102343625566160[98] = 0;
   out_762102343625566160[99] = 0;
   out_762102343625566160[100] = 0;
   out_762102343625566160[101] = 0;
   out_762102343625566160[102] = 0;
   out_762102343625566160[103] = 0;
   out_762102343625566160[104] = 0;
   out_762102343625566160[105] = 0;
   out_762102343625566160[106] = 0;
   out_762102343625566160[107] = 0;
   out_762102343625566160[108] = -0.5*state[6];
   out_762102343625566160[109] = 0.5*state[3];
   out_762102343625566160[110] = 0.5*state[4];
   out_762102343625566160[111] = 0;
   out_762102343625566160[112] = 0;
   out_762102343625566160[113] = 0;
   out_762102343625566160[114] = 0;
   out_762102343625566160[115] = 0;
   out_762102343625566160[116] = 0;
   out_762102343625566160[117] = 0;
   out_762102343625566160[118] = 0;
   out_762102343625566160[119] = 0;
   out_762102343625566160[120] = 0;
   out_762102343625566160[121] = 0;
   out_762102343625566160[122] = 0;
   out_762102343625566160[123] = 0;
   out_762102343625566160[124] = 0;
   out_762102343625566160[125] = 0;
   out_762102343625566160[126] = 0;
   out_762102343625566160[127] = 0;
   out_762102343625566160[128] = 0;
   out_762102343625566160[129] = 0.5*state[5];
   out_762102343625566160[130] = -0.5*state[4];
   out_762102343625566160[131] = 0.5*state[3];
   out_762102343625566160[132] = 0;
   out_762102343625566160[133] = 0;
   out_762102343625566160[134] = 0;
   out_762102343625566160[135] = 0;
   out_762102343625566160[136] = 0;
   out_762102343625566160[137] = 0;
   out_762102343625566160[138] = 0;
   out_762102343625566160[139] = 0;
   out_762102343625566160[140] = 0;
   out_762102343625566160[141] = 0;
   out_762102343625566160[142] = 0;
   out_762102343625566160[143] = 0;
   out_762102343625566160[144] = 0;
   out_762102343625566160[145] = 0;
   out_762102343625566160[146] = 0;
   out_762102343625566160[147] = 0;
   out_762102343625566160[148] = 0;
   out_762102343625566160[149] = 0;
   out_762102343625566160[150] = 0;
   out_762102343625566160[151] = 0;
   out_762102343625566160[152] = 0;
   out_762102343625566160[153] = 1.0;
   out_762102343625566160[154] = 0;
   out_762102343625566160[155] = 0;
   out_762102343625566160[156] = 0;
   out_762102343625566160[157] = 0;
   out_762102343625566160[158] = 0;
   out_762102343625566160[159] = 0;
   out_762102343625566160[160] = 0;
   out_762102343625566160[161] = 0;
   out_762102343625566160[162] = 0;
   out_762102343625566160[163] = 0;
   out_762102343625566160[164] = 0;
   out_762102343625566160[165] = 0;
   out_762102343625566160[166] = 0;
   out_762102343625566160[167] = 0;
   out_762102343625566160[168] = 0;
   out_762102343625566160[169] = 0;
   out_762102343625566160[170] = 0;
   out_762102343625566160[171] = 0;
   out_762102343625566160[172] = 0;
   out_762102343625566160[173] = 0;
   out_762102343625566160[174] = 0;
   out_762102343625566160[175] = 1.0;
   out_762102343625566160[176] = 0;
   out_762102343625566160[177] = 0;
   out_762102343625566160[178] = 0;
   out_762102343625566160[179] = 0;
   out_762102343625566160[180] = 0;
   out_762102343625566160[181] = 0;
   out_762102343625566160[182] = 0;
   out_762102343625566160[183] = 0;
   out_762102343625566160[184] = 0;
   out_762102343625566160[185] = 0;
   out_762102343625566160[186] = 0;
   out_762102343625566160[187] = 0;
   out_762102343625566160[188] = 0;
   out_762102343625566160[189] = 0;
   out_762102343625566160[190] = 0;
   out_762102343625566160[191] = 0;
   out_762102343625566160[192] = 0;
   out_762102343625566160[193] = 0;
   out_762102343625566160[194] = 0;
   out_762102343625566160[195] = 0;
   out_762102343625566160[196] = 0;
   out_762102343625566160[197] = 1.0;
   out_762102343625566160[198] = 0;
   out_762102343625566160[199] = 0;
   out_762102343625566160[200] = 0;
   out_762102343625566160[201] = 0;
   out_762102343625566160[202] = 0;
   out_762102343625566160[203] = 0;
   out_762102343625566160[204] = 0;
   out_762102343625566160[205] = 0;
   out_762102343625566160[206] = 0;
   out_762102343625566160[207] = 0;
   out_762102343625566160[208] = 0;
   out_762102343625566160[209] = 0;
   out_762102343625566160[210] = 0;
   out_762102343625566160[211] = 0;
   out_762102343625566160[212] = 0;
   out_762102343625566160[213] = 0;
   out_762102343625566160[214] = 0;
   out_762102343625566160[215] = 0;
   out_762102343625566160[216] = 0;
   out_762102343625566160[217] = 0;
   out_762102343625566160[218] = 0;
   out_762102343625566160[219] = 1.0;
   out_762102343625566160[220] = 0;
   out_762102343625566160[221] = 0;
   out_762102343625566160[222] = 0;
   out_762102343625566160[223] = 0;
   out_762102343625566160[224] = 0;
   out_762102343625566160[225] = 0;
   out_762102343625566160[226] = 0;
   out_762102343625566160[227] = 0;
   out_762102343625566160[228] = 0;
   out_762102343625566160[229] = 0;
   out_762102343625566160[230] = 0;
   out_762102343625566160[231] = 0;
   out_762102343625566160[232] = 0;
   out_762102343625566160[233] = 0;
   out_762102343625566160[234] = 0;
   out_762102343625566160[235] = 0;
   out_762102343625566160[236] = 0;
   out_762102343625566160[237] = 0;
   out_762102343625566160[238] = 0;
   out_762102343625566160[239] = 0;
   out_762102343625566160[240] = 0;
   out_762102343625566160[241] = 1.0;
   out_762102343625566160[242] = 0;
   out_762102343625566160[243] = 0;
   out_762102343625566160[244] = 0;
   out_762102343625566160[245] = 0;
   out_762102343625566160[246] = 0;
   out_762102343625566160[247] = 0;
   out_762102343625566160[248] = 0;
   out_762102343625566160[249] = 0;
   out_762102343625566160[250] = 0;
   out_762102343625566160[251] = 0;
   out_762102343625566160[252] = 0;
   out_762102343625566160[253] = 0;
   out_762102343625566160[254] = 0;
   out_762102343625566160[255] = 0;
   out_762102343625566160[256] = 0;
   out_762102343625566160[257] = 0;
   out_762102343625566160[258] = 0;
   out_762102343625566160[259] = 0;
   out_762102343625566160[260] = 0;
   out_762102343625566160[261] = 0;
   out_762102343625566160[262] = 0;
   out_762102343625566160[263] = 1.0;
   out_762102343625566160[264] = 0;
   out_762102343625566160[265] = 0;
   out_762102343625566160[266] = 0;
   out_762102343625566160[267] = 0;
   out_762102343625566160[268] = 0;
   out_762102343625566160[269] = 0;
   out_762102343625566160[270] = 0;
   out_762102343625566160[271] = 0;
   out_762102343625566160[272] = 0;
   out_762102343625566160[273] = 0;
   out_762102343625566160[274] = 0;
   out_762102343625566160[275] = 0;
   out_762102343625566160[276] = 0;
   out_762102343625566160[277] = 0;
   out_762102343625566160[278] = 0;
   out_762102343625566160[279] = 0;
   out_762102343625566160[280] = 0;
   out_762102343625566160[281] = 0;
   out_762102343625566160[282] = 0;
   out_762102343625566160[283] = 0;
   out_762102343625566160[284] = 0;
   out_762102343625566160[285] = 1.0;
   out_762102343625566160[286] = 0;
   out_762102343625566160[287] = 0;
   out_762102343625566160[288] = 0;
   out_762102343625566160[289] = 0;
   out_762102343625566160[290] = 0;
   out_762102343625566160[291] = 0;
   out_762102343625566160[292] = 0;
   out_762102343625566160[293] = 0;
   out_762102343625566160[294] = 0;
   out_762102343625566160[295] = 0;
   out_762102343625566160[296] = 0;
   out_762102343625566160[297] = 0;
   out_762102343625566160[298] = 0;
   out_762102343625566160[299] = 0;
   out_762102343625566160[300] = 0;
   out_762102343625566160[301] = 0;
   out_762102343625566160[302] = 0;
   out_762102343625566160[303] = 0;
   out_762102343625566160[304] = 0;
   out_762102343625566160[305] = 0;
   out_762102343625566160[306] = 0;
   out_762102343625566160[307] = 1.0;
   out_762102343625566160[308] = 0;
   out_762102343625566160[309] = 0;
   out_762102343625566160[310] = 0;
   out_762102343625566160[311] = 0;
   out_762102343625566160[312] = 0;
   out_762102343625566160[313] = 0;
   out_762102343625566160[314] = 0;
   out_762102343625566160[315] = 0;
   out_762102343625566160[316] = 0;
   out_762102343625566160[317] = 0;
   out_762102343625566160[318] = 0;
   out_762102343625566160[319] = 0;
   out_762102343625566160[320] = 0;
   out_762102343625566160[321] = 0;
   out_762102343625566160[322] = 0;
   out_762102343625566160[323] = 0;
   out_762102343625566160[324] = 0;
   out_762102343625566160[325] = 0;
   out_762102343625566160[326] = 0;
   out_762102343625566160[327] = 0;
   out_762102343625566160[328] = 0;
   out_762102343625566160[329] = 1.0;
   out_762102343625566160[330] = 0;
   out_762102343625566160[331] = 0;
   out_762102343625566160[332] = 0;
   out_762102343625566160[333] = 0;
   out_762102343625566160[334] = 0;
   out_762102343625566160[335] = 0;
   out_762102343625566160[336] = 0;
   out_762102343625566160[337] = 0;
   out_762102343625566160[338] = 0;
   out_762102343625566160[339] = 0;
   out_762102343625566160[340] = 0;
   out_762102343625566160[341] = 0;
   out_762102343625566160[342] = 0;
   out_762102343625566160[343] = 0;
   out_762102343625566160[344] = 0;
   out_762102343625566160[345] = 0;
   out_762102343625566160[346] = 0;
   out_762102343625566160[347] = 0;
   out_762102343625566160[348] = 0;
   out_762102343625566160[349] = 0;
   out_762102343625566160[350] = 0;
   out_762102343625566160[351] = 1.0;
   out_762102343625566160[352] = 0;
   out_762102343625566160[353] = 0;
   out_762102343625566160[354] = 0;
   out_762102343625566160[355] = 0;
   out_762102343625566160[356] = 0;
   out_762102343625566160[357] = 0;
   out_762102343625566160[358] = 0;
   out_762102343625566160[359] = 0;
   out_762102343625566160[360] = 0;
   out_762102343625566160[361] = 0;
   out_762102343625566160[362] = 0;
   out_762102343625566160[363] = 0;
   out_762102343625566160[364] = 0;
   out_762102343625566160[365] = 0;
   out_762102343625566160[366] = 0;
   out_762102343625566160[367] = 0;
   out_762102343625566160[368] = 0;
   out_762102343625566160[369] = 0;
   out_762102343625566160[370] = 0;
   out_762102343625566160[371] = 0;
   out_762102343625566160[372] = 0;
   out_762102343625566160[373] = 1.0;
   out_762102343625566160[374] = 0;
   out_762102343625566160[375] = 0;
   out_762102343625566160[376] = 0;
   out_762102343625566160[377] = 0;
   out_762102343625566160[378] = 0;
   out_762102343625566160[379] = 0;
   out_762102343625566160[380] = 0;
   out_762102343625566160[381] = 0;
   out_762102343625566160[382] = 0;
   out_762102343625566160[383] = 0;
   out_762102343625566160[384] = 0;
   out_762102343625566160[385] = 0;
   out_762102343625566160[386] = 0;
   out_762102343625566160[387] = 0;
   out_762102343625566160[388] = 0;
   out_762102343625566160[389] = 0;
   out_762102343625566160[390] = 0;
   out_762102343625566160[391] = 0;
   out_762102343625566160[392] = 0;
   out_762102343625566160[393] = 0;
   out_762102343625566160[394] = 0;
   out_762102343625566160[395] = 1.0;
   out_762102343625566160[396] = 0;
   out_762102343625566160[397] = 0;
   out_762102343625566160[398] = 0;
   out_762102343625566160[399] = 0;
   out_762102343625566160[400] = 0;
   out_762102343625566160[401] = 0;
   out_762102343625566160[402] = 0;
   out_762102343625566160[403] = 0;
   out_762102343625566160[404] = 0;
   out_762102343625566160[405] = 0;
   out_762102343625566160[406] = 0;
   out_762102343625566160[407] = 0;
   out_762102343625566160[408] = 0;
   out_762102343625566160[409] = 0;
   out_762102343625566160[410] = 0;
   out_762102343625566160[411] = 0;
   out_762102343625566160[412] = 0;
   out_762102343625566160[413] = 0;
   out_762102343625566160[414] = 0;
   out_762102343625566160[415] = 0;
   out_762102343625566160[416] = 0;
   out_762102343625566160[417] = 1.0;
   out_762102343625566160[418] = 0;
   out_762102343625566160[419] = 0;
   out_762102343625566160[420] = 0;
   out_762102343625566160[421] = 0;
   out_762102343625566160[422] = 0;
   out_762102343625566160[423] = 0;
   out_762102343625566160[424] = 0;
   out_762102343625566160[425] = 0;
   out_762102343625566160[426] = 0;
   out_762102343625566160[427] = 0;
   out_762102343625566160[428] = 0;
   out_762102343625566160[429] = 0;
   out_762102343625566160[430] = 0;
   out_762102343625566160[431] = 0;
   out_762102343625566160[432] = 0;
   out_762102343625566160[433] = 0;
   out_762102343625566160[434] = 0;
   out_762102343625566160[435] = 0;
   out_762102343625566160[436] = 0;
   out_762102343625566160[437] = 0;
   out_762102343625566160[438] = 0;
   out_762102343625566160[439] = 1.0;
   out_762102343625566160[440] = 0;
   out_762102343625566160[441] = 0;
   out_762102343625566160[442] = 0;
   out_762102343625566160[443] = 0;
   out_762102343625566160[444] = 0;
   out_762102343625566160[445] = 0;
   out_762102343625566160[446] = 0;
   out_762102343625566160[447] = 0;
   out_762102343625566160[448] = 0;
   out_762102343625566160[449] = 0;
   out_762102343625566160[450] = 0;
   out_762102343625566160[451] = 0;
   out_762102343625566160[452] = 0;
   out_762102343625566160[453] = 0;
   out_762102343625566160[454] = 0;
   out_762102343625566160[455] = 0;
   out_762102343625566160[456] = 0;
   out_762102343625566160[457] = 0;
   out_762102343625566160[458] = 0;
   out_762102343625566160[459] = 0;
   out_762102343625566160[460] = 0;
   out_762102343625566160[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5052328704831362084) {
   out_5052328704831362084[0] = dt*state[7] + state[0];
   out_5052328704831362084[1] = dt*state[8] + state[1];
   out_5052328704831362084[2] = dt*state[9] + state[2];
   out_5052328704831362084[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5052328704831362084[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5052328704831362084[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5052328704831362084[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5052328704831362084[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5052328704831362084[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5052328704831362084[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5052328704831362084[10] = state[10];
   out_5052328704831362084[11] = state[11];
   out_5052328704831362084[12] = state[12];
   out_5052328704831362084[13] = state[13];
   out_5052328704831362084[14] = state[14];
   out_5052328704831362084[15] = state[15];
   out_5052328704831362084[16] = state[16];
   out_5052328704831362084[17] = state[17];
   out_5052328704831362084[18] = state[18];
   out_5052328704831362084[19] = state[19];
   out_5052328704831362084[20] = state[20];
   out_5052328704831362084[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6576080517812039271) {
   out_6576080517812039271[0] = 1;
   out_6576080517812039271[1] = 0;
   out_6576080517812039271[2] = 0;
   out_6576080517812039271[3] = 0;
   out_6576080517812039271[4] = 0;
   out_6576080517812039271[5] = 0;
   out_6576080517812039271[6] = dt;
   out_6576080517812039271[7] = 0;
   out_6576080517812039271[8] = 0;
   out_6576080517812039271[9] = 0;
   out_6576080517812039271[10] = 0;
   out_6576080517812039271[11] = 0;
   out_6576080517812039271[12] = 0;
   out_6576080517812039271[13] = 0;
   out_6576080517812039271[14] = 0;
   out_6576080517812039271[15] = 0;
   out_6576080517812039271[16] = 0;
   out_6576080517812039271[17] = 0;
   out_6576080517812039271[18] = 0;
   out_6576080517812039271[19] = 0;
   out_6576080517812039271[20] = 0;
   out_6576080517812039271[21] = 0;
   out_6576080517812039271[22] = 1;
   out_6576080517812039271[23] = 0;
   out_6576080517812039271[24] = 0;
   out_6576080517812039271[25] = 0;
   out_6576080517812039271[26] = 0;
   out_6576080517812039271[27] = 0;
   out_6576080517812039271[28] = dt;
   out_6576080517812039271[29] = 0;
   out_6576080517812039271[30] = 0;
   out_6576080517812039271[31] = 0;
   out_6576080517812039271[32] = 0;
   out_6576080517812039271[33] = 0;
   out_6576080517812039271[34] = 0;
   out_6576080517812039271[35] = 0;
   out_6576080517812039271[36] = 0;
   out_6576080517812039271[37] = 0;
   out_6576080517812039271[38] = 0;
   out_6576080517812039271[39] = 0;
   out_6576080517812039271[40] = 0;
   out_6576080517812039271[41] = 0;
   out_6576080517812039271[42] = 0;
   out_6576080517812039271[43] = 0;
   out_6576080517812039271[44] = 1;
   out_6576080517812039271[45] = 0;
   out_6576080517812039271[46] = 0;
   out_6576080517812039271[47] = 0;
   out_6576080517812039271[48] = 0;
   out_6576080517812039271[49] = 0;
   out_6576080517812039271[50] = dt;
   out_6576080517812039271[51] = 0;
   out_6576080517812039271[52] = 0;
   out_6576080517812039271[53] = 0;
   out_6576080517812039271[54] = 0;
   out_6576080517812039271[55] = 0;
   out_6576080517812039271[56] = 0;
   out_6576080517812039271[57] = 0;
   out_6576080517812039271[58] = 0;
   out_6576080517812039271[59] = 0;
   out_6576080517812039271[60] = 0;
   out_6576080517812039271[61] = 0;
   out_6576080517812039271[62] = 0;
   out_6576080517812039271[63] = 0;
   out_6576080517812039271[64] = 0;
   out_6576080517812039271[65] = 0;
   out_6576080517812039271[66] = 1;
   out_6576080517812039271[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6576080517812039271[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6576080517812039271[69] = 0;
   out_6576080517812039271[70] = 0;
   out_6576080517812039271[71] = 0;
   out_6576080517812039271[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6576080517812039271[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6576080517812039271[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6576080517812039271[75] = 0;
   out_6576080517812039271[76] = 0;
   out_6576080517812039271[77] = 0;
   out_6576080517812039271[78] = 0;
   out_6576080517812039271[79] = 0;
   out_6576080517812039271[80] = 0;
   out_6576080517812039271[81] = 0;
   out_6576080517812039271[82] = 0;
   out_6576080517812039271[83] = 0;
   out_6576080517812039271[84] = 0;
   out_6576080517812039271[85] = 0;
   out_6576080517812039271[86] = 0;
   out_6576080517812039271[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6576080517812039271[88] = 1;
   out_6576080517812039271[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6576080517812039271[90] = 0;
   out_6576080517812039271[91] = 0;
   out_6576080517812039271[92] = 0;
   out_6576080517812039271[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6576080517812039271[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6576080517812039271[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6576080517812039271[96] = 0;
   out_6576080517812039271[97] = 0;
   out_6576080517812039271[98] = 0;
   out_6576080517812039271[99] = 0;
   out_6576080517812039271[100] = 0;
   out_6576080517812039271[101] = 0;
   out_6576080517812039271[102] = 0;
   out_6576080517812039271[103] = 0;
   out_6576080517812039271[104] = 0;
   out_6576080517812039271[105] = 0;
   out_6576080517812039271[106] = 0;
   out_6576080517812039271[107] = 0;
   out_6576080517812039271[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6576080517812039271[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6576080517812039271[110] = 1;
   out_6576080517812039271[111] = 0;
   out_6576080517812039271[112] = 0;
   out_6576080517812039271[113] = 0;
   out_6576080517812039271[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6576080517812039271[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6576080517812039271[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6576080517812039271[117] = 0;
   out_6576080517812039271[118] = 0;
   out_6576080517812039271[119] = 0;
   out_6576080517812039271[120] = 0;
   out_6576080517812039271[121] = 0;
   out_6576080517812039271[122] = 0;
   out_6576080517812039271[123] = 0;
   out_6576080517812039271[124] = 0;
   out_6576080517812039271[125] = 0;
   out_6576080517812039271[126] = 0;
   out_6576080517812039271[127] = 0;
   out_6576080517812039271[128] = 0;
   out_6576080517812039271[129] = 0;
   out_6576080517812039271[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6576080517812039271[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6576080517812039271[132] = 1;
   out_6576080517812039271[133] = 0;
   out_6576080517812039271[134] = 0;
   out_6576080517812039271[135] = 0;
   out_6576080517812039271[136] = 0;
   out_6576080517812039271[137] = 0;
   out_6576080517812039271[138] = 0;
   out_6576080517812039271[139] = 0;
   out_6576080517812039271[140] = 0;
   out_6576080517812039271[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6576080517812039271[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6576080517812039271[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6576080517812039271[144] = 0;
   out_6576080517812039271[145] = 0;
   out_6576080517812039271[146] = 0;
   out_6576080517812039271[147] = 0;
   out_6576080517812039271[148] = 0;
   out_6576080517812039271[149] = 0;
   out_6576080517812039271[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6576080517812039271[151] = 0;
   out_6576080517812039271[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6576080517812039271[153] = 0;
   out_6576080517812039271[154] = 1;
   out_6576080517812039271[155] = 0;
   out_6576080517812039271[156] = 0;
   out_6576080517812039271[157] = 0;
   out_6576080517812039271[158] = 0;
   out_6576080517812039271[159] = 0;
   out_6576080517812039271[160] = 0;
   out_6576080517812039271[161] = 0;
   out_6576080517812039271[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6576080517812039271[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6576080517812039271[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6576080517812039271[165] = 0;
   out_6576080517812039271[166] = 0;
   out_6576080517812039271[167] = 0;
   out_6576080517812039271[168] = 0;
   out_6576080517812039271[169] = 0;
   out_6576080517812039271[170] = 0;
   out_6576080517812039271[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6576080517812039271[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6576080517812039271[173] = 0;
   out_6576080517812039271[174] = 0;
   out_6576080517812039271[175] = 0;
   out_6576080517812039271[176] = 1;
   out_6576080517812039271[177] = 0;
   out_6576080517812039271[178] = 0;
   out_6576080517812039271[179] = 0;
   out_6576080517812039271[180] = 0;
   out_6576080517812039271[181] = 0;
   out_6576080517812039271[182] = 0;
   out_6576080517812039271[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6576080517812039271[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6576080517812039271[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6576080517812039271[186] = 0;
   out_6576080517812039271[187] = 0;
   out_6576080517812039271[188] = 0;
   out_6576080517812039271[189] = 0;
   out_6576080517812039271[190] = 0;
   out_6576080517812039271[191] = 0;
   out_6576080517812039271[192] = 0;
   out_6576080517812039271[193] = 0;
   out_6576080517812039271[194] = 0;
   out_6576080517812039271[195] = 0;
   out_6576080517812039271[196] = 0;
   out_6576080517812039271[197] = 0;
   out_6576080517812039271[198] = 1;
   out_6576080517812039271[199] = 0;
   out_6576080517812039271[200] = 0;
   out_6576080517812039271[201] = 0;
   out_6576080517812039271[202] = 0;
   out_6576080517812039271[203] = 0;
   out_6576080517812039271[204] = 0;
   out_6576080517812039271[205] = 0;
   out_6576080517812039271[206] = 0;
   out_6576080517812039271[207] = 0;
   out_6576080517812039271[208] = 0;
   out_6576080517812039271[209] = 0;
   out_6576080517812039271[210] = 0;
   out_6576080517812039271[211] = 0;
   out_6576080517812039271[212] = 0;
   out_6576080517812039271[213] = 0;
   out_6576080517812039271[214] = 0;
   out_6576080517812039271[215] = 0;
   out_6576080517812039271[216] = 0;
   out_6576080517812039271[217] = 0;
   out_6576080517812039271[218] = 0;
   out_6576080517812039271[219] = 0;
   out_6576080517812039271[220] = 1;
   out_6576080517812039271[221] = 0;
   out_6576080517812039271[222] = 0;
   out_6576080517812039271[223] = 0;
   out_6576080517812039271[224] = 0;
   out_6576080517812039271[225] = 0;
   out_6576080517812039271[226] = 0;
   out_6576080517812039271[227] = 0;
   out_6576080517812039271[228] = 0;
   out_6576080517812039271[229] = 0;
   out_6576080517812039271[230] = 0;
   out_6576080517812039271[231] = 0;
   out_6576080517812039271[232] = 0;
   out_6576080517812039271[233] = 0;
   out_6576080517812039271[234] = 0;
   out_6576080517812039271[235] = 0;
   out_6576080517812039271[236] = 0;
   out_6576080517812039271[237] = 0;
   out_6576080517812039271[238] = 0;
   out_6576080517812039271[239] = 0;
   out_6576080517812039271[240] = 0;
   out_6576080517812039271[241] = 0;
   out_6576080517812039271[242] = 1;
   out_6576080517812039271[243] = 0;
   out_6576080517812039271[244] = 0;
   out_6576080517812039271[245] = 0;
   out_6576080517812039271[246] = 0;
   out_6576080517812039271[247] = 0;
   out_6576080517812039271[248] = 0;
   out_6576080517812039271[249] = 0;
   out_6576080517812039271[250] = 0;
   out_6576080517812039271[251] = 0;
   out_6576080517812039271[252] = 0;
   out_6576080517812039271[253] = 0;
   out_6576080517812039271[254] = 0;
   out_6576080517812039271[255] = 0;
   out_6576080517812039271[256] = 0;
   out_6576080517812039271[257] = 0;
   out_6576080517812039271[258] = 0;
   out_6576080517812039271[259] = 0;
   out_6576080517812039271[260] = 0;
   out_6576080517812039271[261] = 0;
   out_6576080517812039271[262] = 0;
   out_6576080517812039271[263] = 0;
   out_6576080517812039271[264] = 1;
   out_6576080517812039271[265] = 0;
   out_6576080517812039271[266] = 0;
   out_6576080517812039271[267] = 0;
   out_6576080517812039271[268] = 0;
   out_6576080517812039271[269] = 0;
   out_6576080517812039271[270] = 0;
   out_6576080517812039271[271] = 0;
   out_6576080517812039271[272] = 0;
   out_6576080517812039271[273] = 0;
   out_6576080517812039271[274] = 0;
   out_6576080517812039271[275] = 0;
   out_6576080517812039271[276] = 0;
   out_6576080517812039271[277] = 0;
   out_6576080517812039271[278] = 0;
   out_6576080517812039271[279] = 0;
   out_6576080517812039271[280] = 0;
   out_6576080517812039271[281] = 0;
   out_6576080517812039271[282] = 0;
   out_6576080517812039271[283] = 0;
   out_6576080517812039271[284] = 0;
   out_6576080517812039271[285] = 0;
   out_6576080517812039271[286] = 1;
   out_6576080517812039271[287] = 0;
   out_6576080517812039271[288] = 0;
   out_6576080517812039271[289] = 0;
   out_6576080517812039271[290] = 0;
   out_6576080517812039271[291] = 0;
   out_6576080517812039271[292] = 0;
   out_6576080517812039271[293] = 0;
   out_6576080517812039271[294] = 0;
   out_6576080517812039271[295] = 0;
   out_6576080517812039271[296] = 0;
   out_6576080517812039271[297] = 0;
   out_6576080517812039271[298] = 0;
   out_6576080517812039271[299] = 0;
   out_6576080517812039271[300] = 0;
   out_6576080517812039271[301] = 0;
   out_6576080517812039271[302] = 0;
   out_6576080517812039271[303] = 0;
   out_6576080517812039271[304] = 0;
   out_6576080517812039271[305] = 0;
   out_6576080517812039271[306] = 0;
   out_6576080517812039271[307] = 0;
   out_6576080517812039271[308] = 1;
   out_6576080517812039271[309] = 0;
   out_6576080517812039271[310] = 0;
   out_6576080517812039271[311] = 0;
   out_6576080517812039271[312] = 0;
   out_6576080517812039271[313] = 0;
   out_6576080517812039271[314] = 0;
   out_6576080517812039271[315] = 0;
   out_6576080517812039271[316] = 0;
   out_6576080517812039271[317] = 0;
   out_6576080517812039271[318] = 0;
   out_6576080517812039271[319] = 0;
   out_6576080517812039271[320] = 0;
   out_6576080517812039271[321] = 0;
   out_6576080517812039271[322] = 0;
   out_6576080517812039271[323] = 0;
   out_6576080517812039271[324] = 0;
   out_6576080517812039271[325] = 0;
   out_6576080517812039271[326] = 0;
   out_6576080517812039271[327] = 0;
   out_6576080517812039271[328] = 0;
   out_6576080517812039271[329] = 0;
   out_6576080517812039271[330] = 1;
   out_6576080517812039271[331] = 0;
   out_6576080517812039271[332] = 0;
   out_6576080517812039271[333] = 0;
   out_6576080517812039271[334] = 0;
   out_6576080517812039271[335] = 0;
   out_6576080517812039271[336] = 0;
   out_6576080517812039271[337] = 0;
   out_6576080517812039271[338] = 0;
   out_6576080517812039271[339] = 0;
   out_6576080517812039271[340] = 0;
   out_6576080517812039271[341] = 0;
   out_6576080517812039271[342] = 0;
   out_6576080517812039271[343] = 0;
   out_6576080517812039271[344] = 0;
   out_6576080517812039271[345] = 0;
   out_6576080517812039271[346] = 0;
   out_6576080517812039271[347] = 0;
   out_6576080517812039271[348] = 0;
   out_6576080517812039271[349] = 0;
   out_6576080517812039271[350] = 0;
   out_6576080517812039271[351] = 0;
   out_6576080517812039271[352] = 1;
   out_6576080517812039271[353] = 0;
   out_6576080517812039271[354] = 0;
   out_6576080517812039271[355] = 0;
   out_6576080517812039271[356] = 0;
   out_6576080517812039271[357] = 0;
   out_6576080517812039271[358] = 0;
   out_6576080517812039271[359] = 0;
   out_6576080517812039271[360] = 0;
   out_6576080517812039271[361] = 0;
   out_6576080517812039271[362] = 0;
   out_6576080517812039271[363] = 0;
   out_6576080517812039271[364] = 0;
   out_6576080517812039271[365] = 0;
   out_6576080517812039271[366] = 0;
   out_6576080517812039271[367] = 0;
   out_6576080517812039271[368] = 0;
   out_6576080517812039271[369] = 0;
   out_6576080517812039271[370] = 0;
   out_6576080517812039271[371] = 0;
   out_6576080517812039271[372] = 0;
   out_6576080517812039271[373] = 0;
   out_6576080517812039271[374] = 1;
   out_6576080517812039271[375] = 0;
   out_6576080517812039271[376] = 0;
   out_6576080517812039271[377] = 0;
   out_6576080517812039271[378] = 0;
   out_6576080517812039271[379] = 0;
   out_6576080517812039271[380] = 0;
   out_6576080517812039271[381] = 0;
   out_6576080517812039271[382] = 0;
   out_6576080517812039271[383] = 0;
   out_6576080517812039271[384] = 0;
   out_6576080517812039271[385] = 0;
   out_6576080517812039271[386] = 0;
   out_6576080517812039271[387] = 0;
   out_6576080517812039271[388] = 0;
   out_6576080517812039271[389] = 0;
   out_6576080517812039271[390] = 0;
   out_6576080517812039271[391] = 0;
   out_6576080517812039271[392] = 0;
   out_6576080517812039271[393] = 0;
   out_6576080517812039271[394] = 0;
   out_6576080517812039271[395] = 0;
   out_6576080517812039271[396] = 1;
   out_6576080517812039271[397] = 0;
   out_6576080517812039271[398] = 0;
   out_6576080517812039271[399] = 0;
   out_6576080517812039271[400] = 0;
   out_6576080517812039271[401] = 0;
   out_6576080517812039271[402] = 0;
   out_6576080517812039271[403] = 0;
   out_6576080517812039271[404] = 0;
   out_6576080517812039271[405] = 0;
   out_6576080517812039271[406] = 0;
   out_6576080517812039271[407] = 0;
   out_6576080517812039271[408] = 0;
   out_6576080517812039271[409] = 0;
   out_6576080517812039271[410] = 0;
   out_6576080517812039271[411] = 0;
   out_6576080517812039271[412] = 0;
   out_6576080517812039271[413] = 0;
   out_6576080517812039271[414] = 0;
   out_6576080517812039271[415] = 0;
   out_6576080517812039271[416] = 0;
   out_6576080517812039271[417] = 0;
   out_6576080517812039271[418] = 1;
   out_6576080517812039271[419] = 0;
   out_6576080517812039271[420] = 0;
   out_6576080517812039271[421] = 0;
   out_6576080517812039271[422] = 0;
   out_6576080517812039271[423] = 0;
   out_6576080517812039271[424] = 0;
   out_6576080517812039271[425] = 0;
   out_6576080517812039271[426] = 0;
   out_6576080517812039271[427] = 0;
   out_6576080517812039271[428] = 0;
   out_6576080517812039271[429] = 0;
   out_6576080517812039271[430] = 0;
   out_6576080517812039271[431] = 0;
   out_6576080517812039271[432] = 0;
   out_6576080517812039271[433] = 0;
   out_6576080517812039271[434] = 0;
   out_6576080517812039271[435] = 0;
   out_6576080517812039271[436] = 0;
   out_6576080517812039271[437] = 0;
   out_6576080517812039271[438] = 0;
   out_6576080517812039271[439] = 0;
   out_6576080517812039271[440] = 1;
}
void h_4(double *state, double *unused, double *out_172293272178988194) {
   out_172293272178988194[0] = state[10] + state[13];
   out_172293272178988194[1] = state[11] + state[14];
   out_172293272178988194[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2162120159528067895) {
   out_2162120159528067895[0] = 0;
   out_2162120159528067895[1] = 0;
   out_2162120159528067895[2] = 0;
   out_2162120159528067895[3] = 0;
   out_2162120159528067895[4] = 0;
   out_2162120159528067895[5] = 0;
   out_2162120159528067895[6] = 0;
   out_2162120159528067895[7] = 0;
   out_2162120159528067895[8] = 0;
   out_2162120159528067895[9] = 0;
   out_2162120159528067895[10] = 1;
   out_2162120159528067895[11] = 0;
   out_2162120159528067895[12] = 0;
   out_2162120159528067895[13] = 1;
   out_2162120159528067895[14] = 0;
   out_2162120159528067895[15] = 0;
   out_2162120159528067895[16] = 0;
   out_2162120159528067895[17] = 0;
   out_2162120159528067895[18] = 0;
   out_2162120159528067895[19] = 0;
   out_2162120159528067895[20] = 0;
   out_2162120159528067895[21] = 0;
   out_2162120159528067895[22] = 0;
   out_2162120159528067895[23] = 0;
   out_2162120159528067895[24] = 0;
   out_2162120159528067895[25] = 0;
   out_2162120159528067895[26] = 0;
   out_2162120159528067895[27] = 0;
   out_2162120159528067895[28] = 0;
   out_2162120159528067895[29] = 0;
   out_2162120159528067895[30] = 0;
   out_2162120159528067895[31] = 0;
   out_2162120159528067895[32] = 0;
   out_2162120159528067895[33] = 1;
   out_2162120159528067895[34] = 0;
   out_2162120159528067895[35] = 0;
   out_2162120159528067895[36] = 1;
   out_2162120159528067895[37] = 0;
   out_2162120159528067895[38] = 0;
   out_2162120159528067895[39] = 0;
   out_2162120159528067895[40] = 0;
   out_2162120159528067895[41] = 0;
   out_2162120159528067895[42] = 0;
   out_2162120159528067895[43] = 0;
   out_2162120159528067895[44] = 0;
   out_2162120159528067895[45] = 0;
   out_2162120159528067895[46] = 0;
   out_2162120159528067895[47] = 0;
   out_2162120159528067895[48] = 0;
   out_2162120159528067895[49] = 0;
   out_2162120159528067895[50] = 0;
   out_2162120159528067895[51] = 0;
   out_2162120159528067895[52] = 0;
   out_2162120159528067895[53] = 0;
   out_2162120159528067895[54] = 0;
   out_2162120159528067895[55] = 0;
   out_2162120159528067895[56] = 1;
   out_2162120159528067895[57] = 0;
   out_2162120159528067895[58] = 0;
   out_2162120159528067895[59] = 1;
   out_2162120159528067895[60] = 0;
   out_2162120159528067895[61] = 0;
   out_2162120159528067895[62] = 0;
   out_2162120159528067895[63] = 0;
   out_2162120159528067895[64] = 0;
   out_2162120159528067895[65] = 0;
}
void h_9(double *state, double *unused, double *out_7611091542703511884) {
   out_7611091542703511884[0] = state[10];
   out_7611091542703511884[1] = state[11];
   out_7611091542703511884[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1920930512898477250) {
   out_1920930512898477250[0] = 0;
   out_1920930512898477250[1] = 0;
   out_1920930512898477250[2] = 0;
   out_1920930512898477250[3] = 0;
   out_1920930512898477250[4] = 0;
   out_1920930512898477250[5] = 0;
   out_1920930512898477250[6] = 0;
   out_1920930512898477250[7] = 0;
   out_1920930512898477250[8] = 0;
   out_1920930512898477250[9] = 0;
   out_1920930512898477250[10] = 1;
   out_1920930512898477250[11] = 0;
   out_1920930512898477250[12] = 0;
   out_1920930512898477250[13] = 0;
   out_1920930512898477250[14] = 0;
   out_1920930512898477250[15] = 0;
   out_1920930512898477250[16] = 0;
   out_1920930512898477250[17] = 0;
   out_1920930512898477250[18] = 0;
   out_1920930512898477250[19] = 0;
   out_1920930512898477250[20] = 0;
   out_1920930512898477250[21] = 0;
   out_1920930512898477250[22] = 0;
   out_1920930512898477250[23] = 0;
   out_1920930512898477250[24] = 0;
   out_1920930512898477250[25] = 0;
   out_1920930512898477250[26] = 0;
   out_1920930512898477250[27] = 0;
   out_1920930512898477250[28] = 0;
   out_1920930512898477250[29] = 0;
   out_1920930512898477250[30] = 0;
   out_1920930512898477250[31] = 0;
   out_1920930512898477250[32] = 0;
   out_1920930512898477250[33] = 1;
   out_1920930512898477250[34] = 0;
   out_1920930512898477250[35] = 0;
   out_1920930512898477250[36] = 0;
   out_1920930512898477250[37] = 0;
   out_1920930512898477250[38] = 0;
   out_1920930512898477250[39] = 0;
   out_1920930512898477250[40] = 0;
   out_1920930512898477250[41] = 0;
   out_1920930512898477250[42] = 0;
   out_1920930512898477250[43] = 0;
   out_1920930512898477250[44] = 0;
   out_1920930512898477250[45] = 0;
   out_1920930512898477250[46] = 0;
   out_1920930512898477250[47] = 0;
   out_1920930512898477250[48] = 0;
   out_1920930512898477250[49] = 0;
   out_1920930512898477250[50] = 0;
   out_1920930512898477250[51] = 0;
   out_1920930512898477250[52] = 0;
   out_1920930512898477250[53] = 0;
   out_1920930512898477250[54] = 0;
   out_1920930512898477250[55] = 0;
   out_1920930512898477250[56] = 1;
   out_1920930512898477250[57] = 0;
   out_1920930512898477250[58] = 0;
   out_1920930512898477250[59] = 0;
   out_1920930512898477250[60] = 0;
   out_1920930512898477250[61] = 0;
   out_1920930512898477250[62] = 0;
   out_1920930512898477250[63] = 0;
   out_1920930512898477250[64] = 0;
   out_1920930512898477250[65] = 0;
}
void h_10(double *state, double *unused, double *out_3864878420190995903) {
   out_3864878420190995903[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3864878420190995903[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3864878420190995903[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2685759071093232638) {
   out_2685759071093232638[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2685759071093232638[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2685759071093232638[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2685759071093232638[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2685759071093232638[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2685759071093232638[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2685759071093232638[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2685759071093232638[7] = 0;
   out_2685759071093232638[8] = 0;
   out_2685759071093232638[9] = 0;
   out_2685759071093232638[10] = 0;
   out_2685759071093232638[11] = 0;
   out_2685759071093232638[12] = 0;
   out_2685759071093232638[13] = 0;
   out_2685759071093232638[14] = 0;
   out_2685759071093232638[15] = 0;
   out_2685759071093232638[16] = 1;
   out_2685759071093232638[17] = 0;
   out_2685759071093232638[18] = 0;
   out_2685759071093232638[19] = 1;
   out_2685759071093232638[20] = 0;
   out_2685759071093232638[21] = 0;
   out_2685759071093232638[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2685759071093232638[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2685759071093232638[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2685759071093232638[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2685759071093232638[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2685759071093232638[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2685759071093232638[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2685759071093232638[29] = 0;
   out_2685759071093232638[30] = 0;
   out_2685759071093232638[31] = 0;
   out_2685759071093232638[32] = 0;
   out_2685759071093232638[33] = 0;
   out_2685759071093232638[34] = 0;
   out_2685759071093232638[35] = 0;
   out_2685759071093232638[36] = 0;
   out_2685759071093232638[37] = 0;
   out_2685759071093232638[38] = 0;
   out_2685759071093232638[39] = 1;
   out_2685759071093232638[40] = 0;
   out_2685759071093232638[41] = 0;
   out_2685759071093232638[42] = 1;
   out_2685759071093232638[43] = 0;
   out_2685759071093232638[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2685759071093232638[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2685759071093232638[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2685759071093232638[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2685759071093232638[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2685759071093232638[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2685759071093232638[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2685759071093232638[51] = 0;
   out_2685759071093232638[52] = 0;
   out_2685759071093232638[53] = 0;
   out_2685759071093232638[54] = 0;
   out_2685759071093232638[55] = 0;
   out_2685759071093232638[56] = 0;
   out_2685759071093232638[57] = 0;
   out_2685759071093232638[58] = 0;
   out_2685759071093232638[59] = 0;
   out_2685759071093232638[60] = 0;
   out_2685759071093232638[61] = 0;
   out_2685759071093232638[62] = 1;
   out_2685759071093232638[63] = 0;
   out_2685759071093232638[64] = 0;
   out_2685759071093232638[65] = 1;
}
void h_12(double *state, double *unused, double *out_1884113930817331366) {
   out_1884113930817331366[0] = state[0];
   out_1884113930817331366[1] = state[1];
   out_1884113930817331366[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2857336248503893900) {
   out_2857336248503893900[0] = 1;
   out_2857336248503893900[1] = 0;
   out_2857336248503893900[2] = 0;
   out_2857336248503893900[3] = 0;
   out_2857336248503893900[4] = 0;
   out_2857336248503893900[5] = 0;
   out_2857336248503893900[6] = 0;
   out_2857336248503893900[7] = 0;
   out_2857336248503893900[8] = 0;
   out_2857336248503893900[9] = 0;
   out_2857336248503893900[10] = 0;
   out_2857336248503893900[11] = 0;
   out_2857336248503893900[12] = 0;
   out_2857336248503893900[13] = 0;
   out_2857336248503893900[14] = 0;
   out_2857336248503893900[15] = 0;
   out_2857336248503893900[16] = 0;
   out_2857336248503893900[17] = 0;
   out_2857336248503893900[18] = 0;
   out_2857336248503893900[19] = 0;
   out_2857336248503893900[20] = 0;
   out_2857336248503893900[21] = 0;
   out_2857336248503893900[22] = 0;
   out_2857336248503893900[23] = 1;
   out_2857336248503893900[24] = 0;
   out_2857336248503893900[25] = 0;
   out_2857336248503893900[26] = 0;
   out_2857336248503893900[27] = 0;
   out_2857336248503893900[28] = 0;
   out_2857336248503893900[29] = 0;
   out_2857336248503893900[30] = 0;
   out_2857336248503893900[31] = 0;
   out_2857336248503893900[32] = 0;
   out_2857336248503893900[33] = 0;
   out_2857336248503893900[34] = 0;
   out_2857336248503893900[35] = 0;
   out_2857336248503893900[36] = 0;
   out_2857336248503893900[37] = 0;
   out_2857336248503893900[38] = 0;
   out_2857336248503893900[39] = 0;
   out_2857336248503893900[40] = 0;
   out_2857336248503893900[41] = 0;
   out_2857336248503893900[42] = 0;
   out_2857336248503893900[43] = 0;
   out_2857336248503893900[44] = 0;
   out_2857336248503893900[45] = 0;
   out_2857336248503893900[46] = 1;
   out_2857336248503893900[47] = 0;
   out_2857336248503893900[48] = 0;
   out_2857336248503893900[49] = 0;
   out_2857336248503893900[50] = 0;
   out_2857336248503893900[51] = 0;
   out_2857336248503893900[52] = 0;
   out_2857336248503893900[53] = 0;
   out_2857336248503893900[54] = 0;
   out_2857336248503893900[55] = 0;
   out_2857336248503893900[56] = 0;
   out_2857336248503893900[57] = 0;
   out_2857336248503893900[58] = 0;
   out_2857336248503893900[59] = 0;
   out_2857336248503893900[60] = 0;
   out_2857336248503893900[61] = 0;
   out_2857336248503893900[62] = 0;
   out_2857336248503893900[63] = 0;
   out_2857336248503893900[64] = 0;
   out_2857336248503893900[65] = 0;
}
void h_35(double *state, double *unused, double *out_5649298364682089177) {
   out_5649298364682089177[0] = state[7];
   out_5649298364682089177[1] = state[8];
   out_5649298364682089177[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5602899280828907609) {
   out_5602899280828907609[0] = 0;
   out_5602899280828907609[1] = 0;
   out_5602899280828907609[2] = 0;
   out_5602899280828907609[3] = 0;
   out_5602899280828907609[4] = 0;
   out_5602899280828907609[5] = 0;
   out_5602899280828907609[6] = 0;
   out_5602899280828907609[7] = 1;
   out_5602899280828907609[8] = 0;
   out_5602899280828907609[9] = 0;
   out_5602899280828907609[10] = 0;
   out_5602899280828907609[11] = 0;
   out_5602899280828907609[12] = 0;
   out_5602899280828907609[13] = 0;
   out_5602899280828907609[14] = 0;
   out_5602899280828907609[15] = 0;
   out_5602899280828907609[16] = 0;
   out_5602899280828907609[17] = 0;
   out_5602899280828907609[18] = 0;
   out_5602899280828907609[19] = 0;
   out_5602899280828907609[20] = 0;
   out_5602899280828907609[21] = 0;
   out_5602899280828907609[22] = 0;
   out_5602899280828907609[23] = 0;
   out_5602899280828907609[24] = 0;
   out_5602899280828907609[25] = 0;
   out_5602899280828907609[26] = 0;
   out_5602899280828907609[27] = 0;
   out_5602899280828907609[28] = 0;
   out_5602899280828907609[29] = 0;
   out_5602899280828907609[30] = 1;
   out_5602899280828907609[31] = 0;
   out_5602899280828907609[32] = 0;
   out_5602899280828907609[33] = 0;
   out_5602899280828907609[34] = 0;
   out_5602899280828907609[35] = 0;
   out_5602899280828907609[36] = 0;
   out_5602899280828907609[37] = 0;
   out_5602899280828907609[38] = 0;
   out_5602899280828907609[39] = 0;
   out_5602899280828907609[40] = 0;
   out_5602899280828907609[41] = 0;
   out_5602899280828907609[42] = 0;
   out_5602899280828907609[43] = 0;
   out_5602899280828907609[44] = 0;
   out_5602899280828907609[45] = 0;
   out_5602899280828907609[46] = 0;
   out_5602899280828907609[47] = 0;
   out_5602899280828907609[48] = 0;
   out_5602899280828907609[49] = 0;
   out_5602899280828907609[50] = 0;
   out_5602899280828907609[51] = 0;
   out_5602899280828907609[52] = 0;
   out_5602899280828907609[53] = 1;
   out_5602899280828907609[54] = 0;
   out_5602899280828907609[55] = 0;
   out_5602899280828907609[56] = 0;
   out_5602899280828907609[57] = 0;
   out_5602899280828907609[58] = 0;
   out_5602899280828907609[59] = 0;
   out_5602899280828907609[60] = 0;
   out_5602899280828907609[61] = 0;
   out_5602899280828907609[62] = 0;
   out_5602899280828907609[63] = 0;
   out_5602899280828907609[64] = 0;
   out_5602899280828907609[65] = 0;
}
void h_32(double *state, double *unused, double *out_2637127511937211224) {
   out_2637127511937211224[0] = state[3];
   out_2637127511937211224[1] = state[4];
   out_2637127511937211224[2] = state[5];
   out_2637127511937211224[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5734064065769648078) {
   out_5734064065769648078[0] = 0;
   out_5734064065769648078[1] = 0;
   out_5734064065769648078[2] = 0;
   out_5734064065769648078[3] = 1;
   out_5734064065769648078[4] = 0;
   out_5734064065769648078[5] = 0;
   out_5734064065769648078[6] = 0;
   out_5734064065769648078[7] = 0;
   out_5734064065769648078[8] = 0;
   out_5734064065769648078[9] = 0;
   out_5734064065769648078[10] = 0;
   out_5734064065769648078[11] = 0;
   out_5734064065769648078[12] = 0;
   out_5734064065769648078[13] = 0;
   out_5734064065769648078[14] = 0;
   out_5734064065769648078[15] = 0;
   out_5734064065769648078[16] = 0;
   out_5734064065769648078[17] = 0;
   out_5734064065769648078[18] = 0;
   out_5734064065769648078[19] = 0;
   out_5734064065769648078[20] = 0;
   out_5734064065769648078[21] = 0;
   out_5734064065769648078[22] = 0;
   out_5734064065769648078[23] = 0;
   out_5734064065769648078[24] = 0;
   out_5734064065769648078[25] = 0;
   out_5734064065769648078[26] = 1;
   out_5734064065769648078[27] = 0;
   out_5734064065769648078[28] = 0;
   out_5734064065769648078[29] = 0;
   out_5734064065769648078[30] = 0;
   out_5734064065769648078[31] = 0;
   out_5734064065769648078[32] = 0;
   out_5734064065769648078[33] = 0;
   out_5734064065769648078[34] = 0;
   out_5734064065769648078[35] = 0;
   out_5734064065769648078[36] = 0;
   out_5734064065769648078[37] = 0;
   out_5734064065769648078[38] = 0;
   out_5734064065769648078[39] = 0;
   out_5734064065769648078[40] = 0;
   out_5734064065769648078[41] = 0;
   out_5734064065769648078[42] = 0;
   out_5734064065769648078[43] = 0;
   out_5734064065769648078[44] = 0;
   out_5734064065769648078[45] = 0;
   out_5734064065769648078[46] = 0;
   out_5734064065769648078[47] = 0;
   out_5734064065769648078[48] = 0;
   out_5734064065769648078[49] = 1;
   out_5734064065769648078[50] = 0;
   out_5734064065769648078[51] = 0;
   out_5734064065769648078[52] = 0;
   out_5734064065769648078[53] = 0;
   out_5734064065769648078[54] = 0;
   out_5734064065769648078[55] = 0;
   out_5734064065769648078[56] = 0;
   out_5734064065769648078[57] = 0;
   out_5734064065769648078[58] = 0;
   out_5734064065769648078[59] = 0;
   out_5734064065769648078[60] = 0;
   out_5734064065769648078[61] = 0;
   out_5734064065769648078[62] = 0;
   out_5734064065769648078[63] = 0;
   out_5734064065769648078[64] = 0;
   out_5734064065769648078[65] = 0;
   out_5734064065769648078[66] = 0;
   out_5734064065769648078[67] = 0;
   out_5734064065769648078[68] = 0;
   out_5734064065769648078[69] = 0;
   out_5734064065769648078[70] = 0;
   out_5734064065769648078[71] = 0;
   out_5734064065769648078[72] = 1;
   out_5734064065769648078[73] = 0;
   out_5734064065769648078[74] = 0;
   out_5734064065769648078[75] = 0;
   out_5734064065769648078[76] = 0;
   out_5734064065769648078[77] = 0;
   out_5734064065769648078[78] = 0;
   out_5734064065769648078[79] = 0;
   out_5734064065769648078[80] = 0;
   out_5734064065769648078[81] = 0;
   out_5734064065769648078[82] = 0;
   out_5734064065769648078[83] = 0;
   out_5734064065769648078[84] = 0;
   out_5734064065769648078[85] = 0;
   out_5734064065769648078[86] = 0;
   out_5734064065769648078[87] = 0;
}
void h_13(double *state, double *unused, double *out_5623579500843631738) {
   out_5623579500843631738[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5623579500843631738[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5623579500843631738[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_74919045099890815) {
   out_74919045099890815[0] = 0;
   out_74919045099890815[1] = 0;
   out_74919045099890815[2] = 0;
   out_74919045099890815[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_74919045099890815[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_74919045099890815[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_74919045099890815[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_74919045099890815[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_74919045099890815[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_74919045099890815[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_74919045099890815[10] = 0;
   out_74919045099890815[11] = 0;
   out_74919045099890815[12] = 0;
   out_74919045099890815[13] = 0;
   out_74919045099890815[14] = 0;
   out_74919045099890815[15] = 0;
   out_74919045099890815[16] = 0;
   out_74919045099890815[17] = 0;
   out_74919045099890815[18] = 0;
   out_74919045099890815[19] = 0;
   out_74919045099890815[20] = 0;
   out_74919045099890815[21] = 0;
   out_74919045099890815[22] = 0;
   out_74919045099890815[23] = 0;
   out_74919045099890815[24] = 0;
   out_74919045099890815[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_74919045099890815[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_74919045099890815[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_74919045099890815[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_74919045099890815[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_74919045099890815[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_74919045099890815[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_74919045099890815[32] = 0;
   out_74919045099890815[33] = 0;
   out_74919045099890815[34] = 0;
   out_74919045099890815[35] = 0;
   out_74919045099890815[36] = 0;
   out_74919045099890815[37] = 0;
   out_74919045099890815[38] = 0;
   out_74919045099890815[39] = 0;
   out_74919045099890815[40] = 0;
   out_74919045099890815[41] = 0;
   out_74919045099890815[42] = 0;
   out_74919045099890815[43] = 0;
   out_74919045099890815[44] = 0;
   out_74919045099890815[45] = 0;
   out_74919045099890815[46] = 0;
   out_74919045099890815[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_74919045099890815[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_74919045099890815[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_74919045099890815[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_74919045099890815[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_74919045099890815[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_74919045099890815[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_74919045099890815[54] = 0;
   out_74919045099890815[55] = 0;
   out_74919045099890815[56] = 0;
   out_74919045099890815[57] = 0;
   out_74919045099890815[58] = 0;
   out_74919045099890815[59] = 0;
   out_74919045099890815[60] = 0;
   out_74919045099890815[61] = 0;
   out_74919045099890815[62] = 0;
   out_74919045099890815[63] = 0;
   out_74919045099890815[64] = 0;
   out_74919045099890815[65] = 0;
}
void h_14(double *state, double *unused, double *out_7611091542703511884) {
   out_7611091542703511884[0] = state[10];
   out_7611091542703511884[1] = state[11];
   out_7611091542703511884[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1920930512898477250) {
   out_1920930512898477250[0] = 0;
   out_1920930512898477250[1] = 0;
   out_1920930512898477250[2] = 0;
   out_1920930512898477250[3] = 0;
   out_1920930512898477250[4] = 0;
   out_1920930512898477250[5] = 0;
   out_1920930512898477250[6] = 0;
   out_1920930512898477250[7] = 0;
   out_1920930512898477250[8] = 0;
   out_1920930512898477250[9] = 0;
   out_1920930512898477250[10] = 1;
   out_1920930512898477250[11] = 0;
   out_1920930512898477250[12] = 0;
   out_1920930512898477250[13] = 0;
   out_1920930512898477250[14] = 0;
   out_1920930512898477250[15] = 0;
   out_1920930512898477250[16] = 0;
   out_1920930512898477250[17] = 0;
   out_1920930512898477250[18] = 0;
   out_1920930512898477250[19] = 0;
   out_1920930512898477250[20] = 0;
   out_1920930512898477250[21] = 0;
   out_1920930512898477250[22] = 0;
   out_1920930512898477250[23] = 0;
   out_1920930512898477250[24] = 0;
   out_1920930512898477250[25] = 0;
   out_1920930512898477250[26] = 0;
   out_1920930512898477250[27] = 0;
   out_1920930512898477250[28] = 0;
   out_1920930512898477250[29] = 0;
   out_1920930512898477250[30] = 0;
   out_1920930512898477250[31] = 0;
   out_1920930512898477250[32] = 0;
   out_1920930512898477250[33] = 1;
   out_1920930512898477250[34] = 0;
   out_1920930512898477250[35] = 0;
   out_1920930512898477250[36] = 0;
   out_1920930512898477250[37] = 0;
   out_1920930512898477250[38] = 0;
   out_1920930512898477250[39] = 0;
   out_1920930512898477250[40] = 0;
   out_1920930512898477250[41] = 0;
   out_1920930512898477250[42] = 0;
   out_1920930512898477250[43] = 0;
   out_1920930512898477250[44] = 0;
   out_1920930512898477250[45] = 0;
   out_1920930512898477250[46] = 0;
   out_1920930512898477250[47] = 0;
   out_1920930512898477250[48] = 0;
   out_1920930512898477250[49] = 0;
   out_1920930512898477250[50] = 0;
   out_1920930512898477250[51] = 0;
   out_1920930512898477250[52] = 0;
   out_1920930512898477250[53] = 0;
   out_1920930512898477250[54] = 0;
   out_1920930512898477250[55] = 0;
   out_1920930512898477250[56] = 1;
   out_1920930512898477250[57] = 0;
   out_1920930512898477250[58] = 0;
   out_1920930512898477250[59] = 0;
   out_1920930512898477250[60] = 0;
   out_1920930512898477250[61] = 0;
   out_1920930512898477250[62] = 0;
   out_1920930512898477250[63] = 0;
   out_1920930512898477250[64] = 0;
   out_1920930512898477250[65] = 0;
}
void h_33(double *state, double *unused, double *out_1277502705475652847) {
   out_1277502705475652847[0] = state[16];
   out_1277502705475652847[1] = state[17];
   out_1277502705475652847[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8753456285467765213) {
   out_8753456285467765213[0] = 0;
   out_8753456285467765213[1] = 0;
   out_8753456285467765213[2] = 0;
   out_8753456285467765213[3] = 0;
   out_8753456285467765213[4] = 0;
   out_8753456285467765213[5] = 0;
   out_8753456285467765213[6] = 0;
   out_8753456285467765213[7] = 0;
   out_8753456285467765213[8] = 0;
   out_8753456285467765213[9] = 0;
   out_8753456285467765213[10] = 0;
   out_8753456285467765213[11] = 0;
   out_8753456285467765213[12] = 0;
   out_8753456285467765213[13] = 0;
   out_8753456285467765213[14] = 0;
   out_8753456285467765213[15] = 0;
   out_8753456285467765213[16] = 1;
   out_8753456285467765213[17] = 0;
   out_8753456285467765213[18] = 0;
   out_8753456285467765213[19] = 0;
   out_8753456285467765213[20] = 0;
   out_8753456285467765213[21] = 0;
   out_8753456285467765213[22] = 0;
   out_8753456285467765213[23] = 0;
   out_8753456285467765213[24] = 0;
   out_8753456285467765213[25] = 0;
   out_8753456285467765213[26] = 0;
   out_8753456285467765213[27] = 0;
   out_8753456285467765213[28] = 0;
   out_8753456285467765213[29] = 0;
   out_8753456285467765213[30] = 0;
   out_8753456285467765213[31] = 0;
   out_8753456285467765213[32] = 0;
   out_8753456285467765213[33] = 0;
   out_8753456285467765213[34] = 0;
   out_8753456285467765213[35] = 0;
   out_8753456285467765213[36] = 0;
   out_8753456285467765213[37] = 0;
   out_8753456285467765213[38] = 0;
   out_8753456285467765213[39] = 1;
   out_8753456285467765213[40] = 0;
   out_8753456285467765213[41] = 0;
   out_8753456285467765213[42] = 0;
   out_8753456285467765213[43] = 0;
   out_8753456285467765213[44] = 0;
   out_8753456285467765213[45] = 0;
   out_8753456285467765213[46] = 0;
   out_8753456285467765213[47] = 0;
   out_8753456285467765213[48] = 0;
   out_8753456285467765213[49] = 0;
   out_8753456285467765213[50] = 0;
   out_8753456285467765213[51] = 0;
   out_8753456285467765213[52] = 0;
   out_8753456285467765213[53] = 0;
   out_8753456285467765213[54] = 0;
   out_8753456285467765213[55] = 0;
   out_8753456285467765213[56] = 0;
   out_8753456285467765213[57] = 0;
   out_8753456285467765213[58] = 0;
   out_8753456285467765213[59] = 0;
   out_8753456285467765213[60] = 0;
   out_8753456285467765213[61] = 0;
   out_8753456285467765213[62] = 1;
   out_8753456285467765213[63] = 0;
   out_8753456285467765213[64] = 0;
   out_8753456285467765213[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6095997321851776631) {
  H(in_vec, out_6095997321851776631);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1020174459653040964) {
  err_fun(nom_x, delta_x, out_1020174459653040964);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_170284851571879567) {
  inv_err_fun(nom_x, true_x, out_170284851571879567);
}
void live_H_mod_fun(double *state, double *out_762102343625566160) {
  H_mod_fun(state, out_762102343625566160);
}
void live_f_fun(double *state, double dt, double *out_5052328704831362084) {
  f_fun(state,  dt, out_5052328704831362084);
}
void live_F_fun(double *state, double dt, double *out_6576080517812039271) {
  F_fun(state,  dt, out_6576080517812039271);
}
void live_h_4(double *state, double *unused, double *out_172293272178988194) {
  h_4(state, unused, out_172293272178988194);
}
void live_H_4(double *state, double *unused, double *out_2162120159528067895) {
  H_4(state, unused, out_2162120159528067895);
}
void live_h_9(double *state, double *unused, double *out_7611091542703511884) {
  h_9(state, unused, out_7611091542703511884);
}
void live_H_9(double *state, double *unused, double *out_1920930512898477250) {
  H_9(state, unused, out_1920930512898477250);
}
void live_h_10(double *state, double *unused, double *out_3864878420190995903) {
  h_10(state, unused, out_3864878420190995903);
}
void live_H_10(double *state, double *unused, double *out_2685759071093232638) {
  H_10(state, unused, out_2685759071093232638);
}
void live_h_12(double *state, double *unused, double *out_1884113930817331366) {
  h_12(state, unused, out_1884113930817331366);
}
void live_H_12(double *state, double *unused, double *out_2857336248503893900) {
  H_12(state, unused, out_2857336248503893900);
}
void live_h_35(double *state, double *unused, double *out_5649298364682089177) {
  h_35(state, unused, out_5649298364682089177);
}
void live_H_35(double *state, double *unused, double *out_5602899280828907609) {
  H_35(state, unused, out_5602899280828907609);
}
void live_h_32(double *state, double *unused, double *out_2637127511937211224) {
  h_32(state, unused, out_2637127511937211224);
}
void live_H_32(double *state, double *unused, double *out_5734064065769648078) {
  H_32(state, unused, out_5734064065769648078);
}
void live_h_13(double *state, double *unused, double *out_5623579500843631738) {
  h_13(state, unused, out_5623579500843631738);
}
void live_H_13(double *state, double *unused, double *out_74919045099890815) {
  H_13(state, unused, out_74919045099890815);
}
void live_h_14(double *state, double *unused, double *out_7611091542703511884) {
  h_14(state, unused, out_7611091542703511884);
}
void live_H_14(double *state, double *unused, double *out_1920930512898477250) {
  H_14(state, unused, out_1920930512898477250);
}
void live_h_33(double *state, double *unused, double *out_1277502705475652847) {
  h_33(state, unused, out_1277502705475652847);
}
void live_H_33(double *state, double *unused, double *out_8753456285467765213) {
  H_33(state, unused, out_8753456285467765213);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
